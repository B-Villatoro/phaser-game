{"version":3,"sources":["utils/API.js","components/Form/index.js","pages/Users.js","pages/Detail.js","pages/NoMatch.js","utils/KEYS.js","components/scenes/LoadScene.js","components/gameobjects/Characters/Enemy.js","components/gameobjects/Characters/Player.js","components/gameobjects/KeyboardV2.js","components/gameobjects/KeyboardControls.js","components/scenes/Game.js","components/scenes/Menu.js","pages/PlayGame.js","App.js","serviceWorker.js","index.js"],"names":["API","getUsers","axios","get","getUser","id","deleteUser","delete","saveUser","userData","post","Input","props","react_default","a","createElement","className","Object","assign","FormBtn","style","float","marginBottom","children","Users","state","users","firstName","lastName","highScore","loadUsers","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","handleStartGame","history","push","this","Container","fluid","Row","Button","onClick","Col","size","Jumbotron","onChange","placeholder","disabled","Component","Detail","user","_this2","match","params","react_router_dom","to","NoMatch","role","aria-label","KEYS","SCENES","Load","Menu","Game","IMAGES","Stars","SPRITES","GreenShip","RedShip","BigRedShip","Enemy","Duck","LoadScene","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","key","load","image","spritesheet","frameHeight","frameWidth","loadbar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","world","x","y","texture","sys","displayList","assertThisInitialized","setScale","setBounce","hp","Physics","Matter","Sprite","Player","turnSpeed","speed","setIgnoreGravity","immovable","KeyboardV2","obj","cursors","input","keyboard","createCursorKeys","InputPlugin","KeyboardControls","left","isDown","setAngularVelocity","right","down","thrustRight","up","thrustLeft","isUp","create","mWorld","matter","setBounds","setOrigin","Ship","Bad","shootThing","sprite","setSize","setDisplaySize","play","e","setVelocity","anims","frameRate","repeat","frames","generateFrameNumbers","KeyControls","startText","text","setTint","setInteractive","PlayGame","config","type","AUTO","physics","default","debug","World","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96f7b522.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function() {\r\n    return axios.get(\"/api/users\");\r\n  },\r\n  // Gets the user with the given id\r\n  getUser: function(id) {\r\n    return axios.get(\"/api/users/\" + id);\r\n  },\r\n  // Deletes the user with the given id\r\n  deleteUser: function(id) {\r\n    return axios.delete(\"/api/users/\" + id);\r\n  },\r\n  // Saves a user to the database\r\n  saveUser: function(userData) {\r\n    return axios.post(\"/api/users\", userData);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n// import Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Row, Col, Container, Jumbotron, Button } from \"react-bootstrap\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    users: [],\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    highScore: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers = () => {\r\n    API.getUsers()\r\n      .then(res =>\r\n        this.setState({ users: res.data, firstName: \"\", lastName: \"\", highScore: 0 })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteUser = id => {\r\n    API.deleteUser(id)\r\n      .then(res => this.loadUsers())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.firstName && this.state.lastName) {\r\n      API.saveUser({\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n      })\r\n        .then(res => this.loadUsers())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  handleStartGame = () => {\r\n    this.props.history.push('./playgame');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Button onClick={this.handleStartGame}>\r\n            Start Game\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-6 mx-auto\">\r\n            <Jumbotron>\r\n              <h1>Who Are You?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.firstName}\r\n                onChange={this.handleInputChange}\r\n                name=\"firstName\"\r\n                placeholder=\"First Name (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.lastName}\r\n                onChange={this.handleInputChange}\r\n                name=\"lastName\"\r\n                placeholder=\"Last Name (required)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.firstName && this.state.lastName)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Detail extends Component {\r\n  state = {\r\n    user: {}\r\n  };\r\n  // When this component mounts, grab the user with the _id of this.props.match.params.id\r\n  // e.g. localhost:3000/users/599dcb67f0f16317844583fc\r\n  componentDidMount() {\r\n    console.log('inside Detail: id = ' + this.props.match.params.id);\r\n    API.getUser(this.props.match.params.id)\r\n      .then(res => this.setState({ user: res.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n                {this.state.user.firstName} {this.state.user.lastName}\r\n                </h1>\r\n                <h1>\r\n                High Score: {this.state.user.highScore}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col size=\"md-2\">\r\n            <Link to=\"/\">← Back to Home</Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","const KEYS = {\r\n    SCENES:{\r\n        Load: \"Load\",\r\n        Menu: \"Menu\",\r\n        Game: \"Game\",\r\n    },\r\n    IMAGES:{\r\n        Stars:\"StarMap\",\r\n    },\r\n    SPRITES:{\r\n        GreenShip: \"GreenShip\",\r\n        RedShip: \"SmallRedShip\",\r\n        BigRedShip: \"BigRedShip\",\r\n        Enemy: \"Enemy\",\r\n        Duck: \"MuscleDuck\",\r\n\r\n    }\r\n}\r\nexport default KEYS","import Phaser from \"phaser\";\r\nimport KEYS from \"../../utils/KEYS\"\r\nexport default class LoadScene extends Phaser.Scene{\r\n    constructor () {\r\n        super({ key: \"LoadScene\"})\r\n    }\r\n\r\n    init(){\r\n\r\n    }\r\n    \r\n    preload(){\r\n        this.load.image(KEYS.IMAGES.Stars, '/images/star_sky.jpg');\r\n        this.load.image(KEYS.SPRITES.Duck, '/images/muscleDuck.png');\r\n        this.load.image(KEYS.SPRITES.Enemy, '/images/unicornduck.jpeg');\r\n        this.load.image(KEYS.SPRITES.GreenShip, '/images/spikedship3smallgreen.png');\r\n        this.load.image(KEYS.SPRITES.RedShip,'/images/spikedship3smallred.png')\r\n        this.load.spritesheet('bullet', '/images/bullets.png',{\r\n            frameHeight:200,\r\n            frameWidth:200,\r\n        });\r\n      \r\n\r\n        this.loadbar = this.add.graphics({\r\n            fillStyle:{\r\n                color: 0xf430f4 //purple color\r\n            }\r\n        })\r\n\r\n        this.load.on(\"progress\",(percent)=>{\r\n            this.loadbar.fillRect(0,this.game.renderer.height/2, (this.game.renderer.width*percent),50) //render in middle of screen\r\n        })\r\n\r\n    }\r\n\r\n    create(){\r\n        this.scene.start(\"Menu\",\"Passing Data Around\")\r\n    }\r\n\r\n}","import Phaser from \"phaser\";\r\n\r\nexport default class Enemy extends Phaser.Physics.Matter.Sprite {\r\n    constructor(world, x, y, texture) {\r\n        super(world, x, y, texture);\r\n        world.scene.sys.add.displayList.add(this);\r\n        this.setScale(.1)\r\n        this.setBounce(1)\r\n        this.hp = 10;\r\n      }\r\n}","import Phaser,{Physics} from \"phaser\";\r\nimport Game from \"../../scenes/Game.js\";\r\n\r\nexport default class Player extends Phaser.Physics.Matter.Sprite {\r\n    constructor(world, x, y, texture) {\r\n        super(world, x, y, texture);\r\n        world.scene.sys.add.displayList.add(this);\r\n\r\n        this.turnSpeed =.1;\r\n        this.speed = .01;\r\n        this.hp = 10;\r\n        // this.flip = false\r\n        this.setIgnoreGravity(true)\r\n        this.immovable=true; // things bounce off \r\n      }\r\n}","import Phaser from \"phaser\";\r\n\r\nexport default class KeyboardV2 extends Phaser.Input.InputPlugin {\r\n    constructor(scene, obj) {\r\n        super(scene, obj);\r\n        obj.cursors = scene.input.keyboard.createCursorKeys();\r\n    }\r\n}","import Phaser from \"phaser\";\r\n\r\nexport default class KeyboardControls {\r\n\r\n    constructor(obj) {\r\n\r\n        if (obj.cursors.left.isDown) {\r\n            obj.setAngularVelocity(-obj.turnSpeed)\r\n        }\r\n        if (obj.cursors.right.isDown) {\r\n            obj.setAngularVelocity(obj.turnSpeed);\r\n        }\r\n        if (obj.cursors.down.isDown) {\r\n            obj.thrustRight(.10);\r\n        }\r\n        if (obj.cursors.up.isDown) {\r\n            // obj.setVelocityY(-10);\r\n            obj.thrustLeft(.10);\r\n        }\r\n        if (obj.cursors.left.isUp && obj.cursors.right.isUp) {\r\n            obj.setAngularVelocity(0)\r\n        }      \r\n        if (obj.cursors.up.isUp && obj.cursors.down.isUp) {\r\n            // obj.setVelocityY(0)\r\n        }\r\n\r\n    }\r\n\r\n}","import Phaser from \"phaser\";\r\nimport KEYS from \"../../utils/KEYS\"\r\nimport { Player, Enemy } from \"../gameobjects/Characters\"\r\nimport KeyboardV2 from \"../gameobjects/KeyboardV2\"\r\nimport KeyControls from \"../gameobjects/KeyboardControls\"\r\n\r\nexport default class Game extends Phaser.Scene {\r\n    constructor() {\r\n        super({ key: \"Game\" })\r\n    }\r\n    init() {\r\n    }\r\n\r\n    preload() {\r\n          this.anims.create({\r\n            key: \"shoot\",\r\n            frameRate: 4,\r\n            repeat: 0,\r\n            frames: this.anims.generateFrameNumbers(\"bullet\", {\r\n                frames: [0, 1, 2, 3, 4]\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    create = () => {\r\n        this.mWorld = this.matter.world.setBounds(0, 0, 800, 600, 32, true, true, true, true);\r\n        this.add.image(0, 0, KEYS.IMAGES.Stars).setOrigin(0, 0).setScale(.8);\r\n        this.Ship = new Player(this.mWorld, 400, 200, KEYS.SPRITES.GreenShip)\r\n        this.Bad = new Enemy(this.mWorld, 0, 0, KEYS.SPRITES.Enemy);\r\n        new KeyboardV2(this, this.Ship);\r\n        this.shootThing = this.matter.add.sprite(200, 200, \"bullet\").setSize(50,50).setDisplaySize(30,30);\r\n    \r\n        console.log(this.shootThing);\r\n        this.shootThing.play(\"shoot\")\r\n\r\n        this.input.keyboard.on('keyup_P', (e) => {\r\n          this.matter.add.sprite(this.Ship.x, this.Ship.y, \"bullet\").setSize(50,50).setDisplaySize(30,30).setVelocity(1,1);\r\n\r\n        })\r\n    }\r\n\r\n    update() {\r\n        new KeyControls(this.Ship)\r\n    }\r\n}\r\n","\r\nimport Phaser from \"phaser\";\r\nimport Game from \"./Game\";\r\nexport default class Menu extends Phaser.Scene {\r\n    constructor() {\r\n        super({ key: \"Menu\" })\r\n    }\r\n\r\n    init(data) {\r\n        console.log(data);\r\n        console.log(\"pretty cool\");\r\n    }\r\n\r\n    preload() {\r\n\r\n    }\r\n\r\n    create() {\r\n        \r\n        this.startText = this.add.text(400, 300, 'Start');\r\n        this.startText.setTint(0xff00ff, 0xffff00, 0x0000ff, 0xff0000);\r\n        this.startText.setInteractive();\r\n        this.startText.on(\"pointerdown\", () => {\r\n            this.scene.start(\"Game\");\r\n        })\r\n\r\n        // this.endText= this.add.text(400, 400, 'End');\r\n        // this.endText.setTint(0xff00ff, 0xffff00, 0x0000ff, 0xff0000);\r\n        // this.endText.setInteractive();\r\n        // this.endText.on(\"pointerdown\",()=>{\r\n        //     this.scene.add(\"Game\",Game,false)\r\n        //     this.scene.start(\"Game\");\r\n        // })\r\n    }\r\n\r\n}","import { Component } from \"react\";\r\nimport LoadScene from \"../components/scenes/LoadScene\"\r\nimport Game from \"../components/scenes/Game\";\r\nimport Menu from \"../components/scenes/Menu\";\r\nimport Phaser from \"phaser\";\r\nimport { World } from \"phaser/src/physics/matter-js/CustomMain\";\r\n\r\nclass PlayGame extends Component {\r\n\r\n  componentDidMount() {\r\n    var config = {\r\n      type: Phaser.AUTO,\r\n      width: 800,\r\n      height: 600,\r\n      physics: {\r\n        default: 'matter',\r\n        matter:{\r\n          debug: true          \r\n        }\r\n        // default:'arcade',\r\n        // arcade: {\r\n        //   debug: true,\r\n        //   gravity: { y: 200 }\r\n        // }\r\n      },\r\n      scene: [\r\n        LoadScene,Game,Menu\r\n      ]\r\n\r\n    };\r\n\r\n    this.game = new Phaser.Game(config);\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  preload() {\r\n\r\n  }\r\n\r\n  create() {\r\n  new World(Game)\r\n  }\r\n\r\n  update() {}\r\n\r\n  render() {\r\n    return (null)\r\n  }\r\n\r\n}\r\nexport default PlayGame;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Users from \"./pages/Users\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport PlayGame from \"./pages/PlayGame\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* <Nav /> */}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Users} />\r\n          <Route exact path=\"/playgame\" component={PlayGame} />\r\n          <Route exact path=\"/users\" component={Users} />\r\n          <Route exact path=\"/users/:id\" component={Detail} />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}