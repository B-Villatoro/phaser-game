{"version":3,"sources":["utils/API.js","components/Form/index.js","pages/Users.js","pages/Detail.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["API","getUsers","axios","get","getUser","id","deleteUser","delete","saveUser","userData","post","Input","props","react_default","a","createElement","className","Object","assign","FormBtn","style","float","marginBottom","children","Users","state","users","firstName","lastName","highScore","loadUsers","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","this","Container","fluid","Row","Col","size","Jumbotron","onChange","placeholder","disabled","onClick","Component","Detail","book","_this2","getBook","match","params","title","author","synopsis","react_router_dom","to","NoMatch","role","aria-label","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89cb5c43.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"/api/users\");\n  },\n  // Gets the user with the given id\n  getUser: function(id) {\n    return axios.get(\"/api/users/\" + id);\n  },\n  // Deletes the user with the given id\n  deleteUser: function(id) {\n    return axios.delete(\"/api/users/\" + id);\n  },\n  // Saves a user to the database\n  saveUser: function(userData) {\n    return axios.post(\"/api/users\", userData);\n  }\n};\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nclass Users extends Component {\n  state = {\n    users: [],\n    firstName: \"\",\n    lastName: \"\",\n    highScore: 0\n  };\n\n  componentDidMount() {\n    this.loadUsers();\n  }\n\n  loadUsers = () => {\n    API.getUsers()\n      .then(res =>\n        this.setState({ users: res.data, firstName: \"\", lastName: \"\", highScore: 0 })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteUser = id => {\n    API.deleteUser(id)\n      .then(res => this.loadUsers())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.firstName && this.state.lastName) {\n      API.saveUser({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n      })\n        .then(res => this.loadUsers())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6 mx-auto\">\n            <Jumbotron>\n              <h1>Who Are You?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.firstName}\n                onChange={this.handleInputChange}\n                name=\"firstName\"\n                placeholder=\"First Name (required)\"\n              />\n              <Input\n                value={this.state.lastName}\n                onChange={this.handleInputChange}\n                name=\"lastName\"\n                placeholder=\"Last Name (required)\"\n              />\n              <FormBtn\n                disabled={!(this.state.firstName && this.state.lastName)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n  state = {\n    book: {}\n  };\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    API.getBook(this.props.match.params.id)\n      .then(res => this.setState({ book: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {this.state.book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">‚Üê Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                üôÑ\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Users from \"./pages/Users\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* <Nav /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Users} />\n          <Route exact path=\"/users\" component={Users} />\n          <Route exact path=\"/users/:id\" component={Detail} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}